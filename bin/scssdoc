#!/usr/bin/env ruby
require 'rubygems'
require 'scss_doc'
require 'optparse'

class SCSSDocCli
  def self.run(args)
    options = {
      :input_dir => '.',
      :skip_files => [],
      :output_dir => 'doc',
      :template_path => File.expand_path(File.dirname(__FILE__) + "/../src/templates/default")
    }
    OptionParser.new do |opts|
      opts.banner = "Usage: scssdoc [variables path]"
      opts.on("-o", "--output=dir", "Specify output directory") do |dir|
        options[:output_dir] = dir
      end
      opts.on("-s", "--skip=files", "Skip specified files") do |files|
        options[:skip_files] = files.split(',').collect { |file| file.strip }
      end
      opts.on("-p", "--project-name=name", "Specify Project name") do |name|
        options[:project_name] = name
      end
      opts.on("-v", "--[no-]verbose", "Run verbosely") do |v|
        options[:verbose] = v
      end
      opts.on("-t", "--template=name/path", "Specify template or template path") do |name|
        if File.directory?(name)
          options[:template_path] = name
        else
          options[:template_path] = File.expand_path(File.dirname(__FILE__) + "/../src/templates/#{name}")
        end
      end
    end.parse!
    options[:input_dir] = ARGV.first if ARGV.first
    
    driver = SCSSDoc::Driver.new
    driver.run(options)
  end
end

SCSSDocCli.run(ARGV)
